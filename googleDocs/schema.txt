The document metadata includes:
    Document title, author, permissions, creation and last modified timestamps.
    Access control data (e.g., roles like owner, editor, viewer).
    Versioning pointers, references to document snapshots, and other attributes.

use RDBMS for above because we need Data Integrity and Transactional Consistency
the relationship between users, documents, and permissions should be strictly enforced.


for comments:  use a NoSQL DB for comment service
The dataType could be K-V.
K: document_id, V: Json object relevant to the comment. {line:1, position: 123, comment: “hey”, user_id: 123}

Database Schema for Versioning
    document_snapshots (stores periodic full snapshots)
    document_changes (stores deltas between snapshots)


CREATE TABLE document_snapshots (
    document_id UUID,
    version_id UUID PRIMARY KEY,
    timestamp TIMESTAMP DEFAULT NOW(),
    author_id UUID,
    content TEXT,  -- Serialized JSON/Protobuf of the document
    previous_version UUID NULL  -- Previous snapshot
);
CREATE TABLE document_changes (
    document_id UUID,
    version_id UUID PRIMARY KEY,
    timestamp TIMESTAMP DEFAULT NOW(),
    author_id UUID,
    base_version UUID,  -- Reference to last known version
    changes JSONB  -- Delta operations (insert, delete, format)
);
