Functional requirements:
1. The system should continuously monitor data from a fleet of servers.
2. The data to be collected includes CPU usage, memory usage, disk usage, system logs, and web server access and error logs.
3. Users should be able to set alert rules based on certain conditions. For example, if the average CPU usage in the last 5 minutes exceeds 80%, an alert should be triggered.
4. Alerts should be delivered to users via email, SMS, or push notifications within 1 minute of being triggered.
5. Users should be able to view real-time and historical data on a web-based dashboard.




Non-Functional Requirements:
1. Scalability: The system should initially support monitoring 10,000 servers, with the capacity to scale by 20% annually.
2. Reliability: The system should accurately collect and process server data, and reliably deliver alerts.
3. Availability: The system should be operational 24/7 to ensure continuous monitoring and alerting.
4. Consistency: The system should provide consistent data across all servers and over time.
5. Latency: The system should process and display data in real-time or near real-time.
6. Efficiency: The system should efficiently handle high volumes of data and alert rules.

a monitoring system contains 5 components

• Data collection: collect metric data from different sources.
• Data transmission: transfer data from source lo the metrics monitoring system.
• Data storage: organize and store incoming data.
• Alerting: analyze incoming data,detect anomalies and genrate alerts. The system must be able to send alerts to differnet communication channels
• visualization: data in graphs etc 



according to DB-engines , the two most popular time-series databases are InfluxDB [15] and Prometheus,
which are designed to store large volumes of time-series data and quickly perform real- tim.e analysis on that data. 


we need to consider pull or push mode for metrics collector

for pull model:
metrics collector needs to know about dns of each service, we can use zookeepr for service discovery here
we can use multiple metrics collector, each metric collector collects metrics from a specific range of service

for push model:
In a push model, a collection agent is commonly installed on the server being monitored.
A collection agent is a piece of long running software that collects metrics from the services running on the server and 
push them to metrics collector.

kafka is introduced to prevent data loss if timeseries db is unavailable

