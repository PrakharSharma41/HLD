when a user wants to book a ticket:
1. A user will select a seat from the interactive seat map. This will trigger a POST /bookings with the ticketId associated with that seat.
2. The request will be forwarded from our API gateway onto the Booking Service.
3. The Booking Service will lock that ticket by adding it to our Redis Distributed Lock with a TTL of 10 minutes (this is how long we will hold the ticket for).
4. The Booking Service will also write a new booking entry in the DB with a status of in-progress.
5. We will then respond to the user with their newly created bookingId and route the client to a the payment page.
    5.1 If the user stops here, then after 10 minutes the lock is auto-released and the ticket is available for another user to purchase.
6. The user will fill out their payment details and click "Purchase." In doing so, the payment (along with the bookingId) gets sent to Stripe for processing and Stripe responds via webhook that the payment was successful.
7. Upon successful payment confirmation from Stripe, our system's webhook retrieves the bookingId embedded within the Stripe metadata. With this bookingId, the webhook initiates a database transaction to concurrently update the Ticket and Booking tables. Specifically, the status of the ticket linked to the booking is changed to "sold" in the Ticket table. Simultaneously, the corresponding booking entry in the Booking table is marked as "confirmed."
Now the ticket is booked!
